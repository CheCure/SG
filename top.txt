/** CONFIGURATIONS **/
// Theshold for duration of entire script - fails test if script lasts longer than X (in ms)
// Default is '0', which means that it won't fail.
var ScriptTimeout = 0;
// Script-wide timeout for all wait and waitAndFind functions (in ms)
var DefaultTimeout = 10000;
// Change to any User Agent you want to use.
// Leave as "default" or empty to use the Synthetics default.
var UserAgent = "default";
// used to start step count
var StepCount = 0;
/** HELPER VARIABLES AND FUNCTIONS **/
var assert = require('assert'),
By = $driver.By,
browser = $browser.manage(),
startTime = Date.now(),
stepStartTime = Date.now(),
lastStep = 9999,
VARS = {};
 
var log = function(thisLabel) {
   NowNow= Date.now();
   var elapsedTime = 0;
   elapsedTime = NowNow - startTime;
   console.log (thisLabel + ":" + elapsedTime);
   $util.insights.set(thisLabel ,elapsedTime);
   startTime = NowNow;
};

function isElementSelected(el) { return $browser.findElement(el).isSelected(); }

function stepCounter(){
   return StepCount= StepCount+1;
}

function logProc(inLabel){
   var timeElapsed = 0;
   var nrNow = Date.now();
   timeElapsed = nrNow - startTime;
   console.log('Process Segment: ' + inLabel + ' ' + timeElapsed);
   $util.insights.set(inLabel, timeElapsed);
   startTime = nrNow;

}

/** BEGINNING OF SCRIPT **/
// Setting User Agent is not then-able, so we do this first (if defined and not default)
if (UserAgent && (0 !== UserAgent.trim().length) && (UserAgent != 'default')) {
  $browser.addHeader('User-Agent', UserAgent);
  console.log('Setting User-Agent to ' + UserAgent);
}
// Get browser capabilities and do nothing with it, so that we start with a then-able command
$browser.getCapabilities().then(function () { })
$browser.manage().deleteAllCookies().then(function(){})
 